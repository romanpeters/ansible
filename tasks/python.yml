---
- name: "install Python packages and dependencies"
  package:
    name: "{{ item }}"
    state: "latest"
  with_items:
    - "build-essential"
    - "python3-pip"
    - "virtualenv"
    - "python3-dev"
    - "python3-setuptools"
    - "tk-dev"
    - "libncurses5-dev"
    - "libncursesw5-dev"
    - "libreadline6-dev"
    - "libdb5.3-dev"
    - "libgdbm-dev"
    - "libsqlite3-dev"
    - "libssl-dev"
    - "libffi-dev"
    - "libbz2-dev"
    - "libexpat1-dev"
    - "liblzma-dev"
    - "zlib1g-dev"
    - "libtiff5-dev"
    - "libjpeg8-dev"
    - "zlib1g-dev"
    - "libfreetype6-dev"
    - "liblcms2-dev"
    - "libwebp-dev"
    - "tcl8.5-dev"
    - "tk8.5-dev"
    - "python-tk"



- set_fact:
    py_version_short: "{{ '.'.join(py_version.split('.', 2)[:2]) }}"

- set_fact:
    py_exec: "python{{ py_version_short }}"

- name: "check if python version installed"
  command: "which {{ py_exec }}"
  register: command_result
  ignore_errors: yes

- name: "download the tar ball"
  get_url:
    url: "https://www.python.org/ftp/python/{{ py_version }}/Python-{{ py_version }}.tgz"
    dest: "/tmp/Python-{{ py_version }}.tgz"
  when: command_result.rc != 0

- name: "unpack the source package"
  unarchive:
    src: "/tmp/Python-{{ py_version }}.tgz"
    dest: "/tmp/"
    copy: no
  when: command_result.rc != 0

- name: "run configure"
  command: "./configure"
  args:
    chdir: "/tmp/Python-{{ py_version }}"
  when: command_result.rc != 0

- name: "run make"
  command: "make"
  args:
    chdir: "/tmp/Python-{{ py_version }}"
  when: command_result.rc != 0

- name: "run make install"
  command: "make install"
  args:
    chdir: "/tmp/Python-{{ py_version }}"
  when: command_result.rc != 0

- name: "clean up the source files"
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/tmp/Python-{{ py_version }}"
    - "/tmp/Python-{{ py_version }}.tgz"
